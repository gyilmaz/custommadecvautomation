name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.project }}
    
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }} --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.project }}-${{ matrix.shardIndex }}
        path: playwright-report/
        retention-days: 30
    
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: test-results-${{ matrix.project }}-${{ matrix.shardIndex }}
        path: test-results/
        retention-days: 30

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download blob reports from artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-reports/
        pattern: playwright-report-*
    
    - name: Merge reports
      run: npx playwright merge-reports --reporter html ./all-reports
    
    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-report--attempt-${{ github.run_attempt }}
        path: playwright-report
        retention-days: 14

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check Prettier formatting
      run: npm run format:check

  notify:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Send notification
      run: |
        echo "Tests failed! Check the workflow run for details."
        # Add your notification logic here (Slack, Discord, email, etc.)